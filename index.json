[{"categories":["CTF"],"contents":"Misc - Bonus Untuk soal kategori ini tidak perlu di jelaskan sudah ada jawabanya semua flag nya yaitu\nBonus 1 : DiskoCTF{reborn_playing}\nBonus 2 : DiskoCTF{hints!}\nBonus 3 : DiskoCTF{we\u0026rsquo;ve_should_sorry_to_you_guys}\nReverse Engineering Expr or Call Berikut adalah challengenya\n Adakah jalan (commands) menuju bendera diantara alat dynamic debuggers ? P.S: Akan sangat disayangkan bila soal ini di-solve menggunakan Decompiler , such waste time :)\n buka menggunakan gdb lalu pasang breakpoint pada fungsi main\ngdb -q main break main jalankan kembali programnya dengan menggunkaan perintah r pada gdb, selanjutnya masukan perintah jump pada fungsi flag, dan di dapatkan flagnya\ngdb-peda$ jump flag Continuing at 0x555555555154. DiskoCTF{when_there\u0026#39;s_symbols_why_should_disassemble_it?} [Inferior 1 (process 9099) exited normally] Flag: DiskoCTF{when_there\u0026rsquo;s_symbols_why_should_disassemble_it?}\nOSINT Kali ini challenge nya tentang OSINT (Opensource Intelligence) itu arti nya skill Intelligence Gathering kita bakalan dipraktikkan disini.\nRahasia Username  Ada rahasia dibalik username diskominfokotaserang\n pertama kita menggunakan tools sherlock untuk mencari tau kumpulan akun sosial media dengan menggunakan tools itu dan di dapatkan hasil sebagai berikut\n[fallcrescent@ccug ~]$ sherlock diskominfokotaserang [*] Checking username diskominfokotaserang on: [+] Academia.edu: https://independent.academia.edu/diskominfokotaserang [+] Blogger: https://diskominfokotaserang.blogspot.com [+] CashMe: https://cash.me/$diskominfokotaserang [+] Disqus: https://disqus.com/diskominfokotaserang [+] GitHub: https://www.github.com/diskominfokotaserang [+] Instagram: https://www.instagram.com/diskominfokotaserang [+] Photobucket: https://photobucket.com/user/diskominfokotaserang/library [+] Pinterest: https://www.pinterest.com/diskominfokotaserang/ [+] allmylinks: https://allmylinks.com/diskominfokotaserang ada sesuatu yang menarik pada postingan instagram diskominfokotaserang yaitu setelah di download buka dengan menggunakan stegsolve dan menggeser beberapa bit mendapat penampakan flagnya Flag: DiskoCTF{coloring_osint}\\\nOSEEN  Melihat sebuah komentar di platform \u0026ldquo;lebih dari tv\u0026rdquo; mungkin akan mendapatkan flag\n kita di beri gambar sebagai berikut:\nkita periksa meta datanya dengan menggunakan exiftool dan di dapatkan informasi sebagai berikut\n[fallcrescent@ccug Downloads]$ exiftool 340.png ExifTool Version Number : 12.00 File Name : 340.png Directory : . File Size : 2.1 MB File Modification Date/Time : 2020:10:11 14:57:26+07:00 File Access Date/Time : 2020:10:11 14:57:26+07:00 File Inode Change Date/Time : 2020:10:11 14:57:33+07:00 File Permissions : rw-r--r-- File Type : PNG File Type Extension : png MIME Type : image/png Image Width : 1920 Image Height : 1080 Bit Depth : 8 Color Type : RGB Compression : Deflate/Inflate Filter : Adaptive Interlace : Noninterlaced Significant Bits : 8 8 8 Exif Byte Order : Little-endian (Intel, II) Software : Google Artist : supercell Copyright : Sony Music Entertainment (Japan) Inc. (on behalf of (P)2009 Sony Music Exif Version : 0220 User Comment : 「君の知らない物語」（Cover）-波羅ノ鬼（ハラノオニ）- Image Size : 1920x1080 Megapixels : 2.1 Pada user Comment terdapat lagu yang di bawakan oleh artis jepang lagu tersebut tersedia di youtube di sini saya berasumsi bahwa flag nya ada di komentar youtube tersebut, lalu saya menggunakan youtube comment finder dan mendapatkan jackpot berupa flag\nFlag: DiskoCTF{in_distant_memory}\nBinary Exploitation Evil Input  Tebak nomor berhadiah flag\u0026hellip; nc ctf.serangkota.go.id 9971\n di berikan sebuah file python berisikan kodingan sebagai berikut :\nfrom __future__ import print_function from random import randint correct = randint(1, 999999) print(\u0026#34;Tebak Nomor : \u0026#34;, end=\u0026#34;\u0026#34;) question = input(\u0026#34;\u0026#34;) if question == correct: import flag else: print(\u0026#34;Salah! Yang Bener\u0026#34;, correct) pada baris ke 9 ada bug input pada python 2.7 dan dapat di eksekusi langsung dengan sebagai berikut:\n[fallcrescent@ccug Downloads]$ nc ctf.serangkota.go.id 9971 Tebak Nomor : correct DiskoCTF{bukan_tebak_tebakan} Flag: DiskoCTF{bukan_tebak_tebakan}\n","date":"12","image":"images/post/disko-ctf/logo-kominfo.png","permalink":"https://fallcrescent.my.id/blog/write-up-disko-ctf/","tags":["CTF"],"title":"Write up Disko CTF"},{"categories":["CTF"],"contents":"Hexer diberikan clue sebagai berikut\n Hi I\u0026rsquo;m hexer and i will hex you\n49 6d 20 68 65 78 65 72\n seperti pada judul soal ini merupakan bilangan hexadesimal, bisa langsung decode dengan menggunakan Python dan di dapatkan flag:\nFlag : REDUCE{Im hexerS}\nkode standar amerika diberikan kode sebagai berikut\n 65 109 101 114 105 99 97 110 32 83 116 97 110 100 97 114 100 32 67 111 100 101 32 102 111 114 32 73 110 102 111 114 109 97 116 105 111 110 32 73 110 116 101 114 99 104 97 110 103 101\n selanjutnya kita bisa langsung mengkonversikan kode ascii tersebut ke dalam bentuk plain text dengan menggunakan tools online Flag : REDUCE{American Standard Code for Information Interchange}\nSpam Banget  w dapet pesan nih dari sang heker, namanya cesar chip8. Katanya sih ada flagnya di dalem situ sini\n setelah di buka ternyata itu adalah string yang sudah di enkripsi menggunakan caesar cipher, untuk itu saya menggunakan bantuan website ini untuk melakukan decode, setelah di decode ternyata kita mendapatkan pesan spam yang tidak ada artinya, tapi tenang saja dengan menggunakan tools ini di dapatkan flag.\nFlag: REDUCE{Fl4g_1s_Fl46}\nto be continued..\n","date":"12","image":"images/post/reduce-ctf/reduce-logo.png","permalink":"https://fallcrescent.my.id/blog/write-up-reduce-ctf/","tags":["CTF"],"title":"Write up Reduce CTF"},{"categories":["CTF"],"contents":"Cryptography One Byte XOR diberikan file ZIP berisi source code python encryptor dan hasil enkripsinya berikut adalah scriptnya\nfrom Crypto import Random import base64 def main(): flag = open(\u0026#34;flag.txt\u0026#34;,\u0026#34;rb\u0026#34;).read() key = Random.new().read(1) res = \u0026#34;\u0026#34; for i in range(len(flag)): res += chr(ord(flag[i]) ^ ord(key)) res = base64.b64encode(res) open(\u0026#34;encrypted\u0026#34;,\u0026#34;wb\u0026#34;).write(res) if __name__ == \u0026#34;__main__\u0026#34;: main() Fungsi enkirptor diatas adalah meng-XOR setiap character dengan 1 byte key random, lalu hasilnya di encode ke base64. Untuk menyelesaikan challenge ini, penulis menggunakan Brute Force untuk angka dari 0 sampai 256 berikut adalah script solvernya\nfrom Crypto import Random import base64 flag = open(\u0026#34;flag.txt\u0026#34;,\u0026#34;rb\u0026#34;).read() flag = base64.b64decode(flag) def xorString(string,key): res = \u0026#34;\u0026#34; for i in range(len(string)): res += chr(ord(flag[i]) ^ key) return res for j in range(0,256): resu = xorString(flag,j) if \u0026#34;HackFest\u0026#34; in resu: print j,resu Setelah di run maka di dapatkan output : Selamat, ini flagnya : HackFest{ketika_ragu_dan_galau_brute_force_aja}\nCryptizi Diberikan file zip berisi source code python berupa enkriptor, berikut adalah Scriptnya\ndef main(): print(\u0026#34;#[][][]ENKRIPTOR mini \u0026#34; ) x = raw_input(\u0026#34;\\n\\ntYPE : \\n\u0026#34;) x = duniasakti(x) print(\u0026#34;\\n\\n{}RESULT :\\n\u0026#34; + x) return 0 def duniasakti(yy): x = list(yy) a = len(x) - 1 n = a/2 for i in range(n,a+1): temp = x[a-i] x[a-i] = x[i] x[i] = temp a = a + 1 v = a * 3 for h in range(a): temp = x[h] for j in range(256): karakter = chr(j) if(karakter==temp): x[h] = str(j*v) break continue x = \u0026#34;Un%\u0026#34;.join(x) x = list(x) z = list() yuyu = [\u0026#39;1\u0026#39;,\u0026#39;2\u0026#39;,\u0026#39;3\u0026#39;,\u0026#39;4\u0026#39;] kangkang = [\u0026#39;!*\u0026#39;,\u0026#39;x\u0026#39;,\u0026#39;_\u0026#39;,\u0026#39;q\u0026#39;] for i in x: c = i in yuyu if(c == True): i = kangkang[yuyu.index(i)] z.append(i) z = \u0026#39;\u0026#39;.join(z) return(z) if __name__ == \u0026#39;__main__\u0026#39;: main() enkripsi ini merubah text asli (Plain text) menjadi list dan merubahnya dengan sebuah inyeger lalu di gabung dengan \u0026ldquo;Un5%\u0026rdquo; dan merubah angka menjadi !*,x,_,q secara berurutan, berikut adalah solvernya\ncipher = open(\u0026#34;xxcheap.enc\u0026#34;,\u0026#34;rb\u0026#34;).read() cipher = cipher.replace(\u0026#34;!*\u0026#34;,\u0026#34;1\u0026#34;) cipher = cipher.replace(\u0026#34;x\u0026#34;,\u0026#34;2\u0026#34;) cipher = cipher.replace(\u0026#34;_\u0026#34;,\u0026#34;3\u0026#34;) cipher = cipher.replace(\u0026#34;q\u0026#34;,\u0026#34;4\u0026#34;) cipher = cipher.replace(\u0026#34;Un%\u0026#34;,\u0026#34; \u0026#34;) print cipher a = 33 v = a * 3 x = [12375, 10395, 11484, 11286, 9999, 10197, 10890, 9999, 10791, 10395, 9900, 9405, 11484, 10395, 10692, 11583, 11385, 9405, 9603, 10395, 11385, 11583, 10890, 9603, 10791, 9405, 10197, 10890, 9603, 9900, 9603, 10593, 12177] t = \u0026#34;\u0026#34; print v for i in range(33): h = x[i] y = h/v t += chr(y) print(t[::-1]) maka akan keluar output\n12375 10395 11484 11286 9999 10197 10890 9999 10791 10395 9900 9405 11484 10395 10692 11583 11385 9405 9603 10395 11385 11583 10890 9603 10791 9405 10197 10890 9603 9900 9603 10593 12177 99 {kadang_manusia_sulit_dimengerti} Flag : HackFest{kadang_manusia_sulit_dimengerti}\nReverse Engineering Ular Terbungkus Diberikan file dengan ekstensi file python yang sudah di compile (.pyc) dan ketika di run maka akan menampilkan :\n----- Sarang Ular ----- Flag : untuk menyelesaikan challenge ini, penulis terlebih dahulu mendecompyle dengan bantuan Uncompyle6, dan saat di run akan tampil :\n┌─[fallcrescent@parrot]─[~/Hackfest/Crypto/Multibyte_XOR_Source] └──╼ $ uncompyle6 ular_terbungkus.pyc # uncompyle6 version 3.2.4 # Python bytecode 2.7 (62211) # Decompiled from: Python 2.7.15+ (default, Nov 28 2018, 16:27:22) # [GCC 8.2.0] # Embedded file name: ular_terbungkus.py # Compiled at: 2018-12-12 08:33:32 from Crypto.Cipher import AES import hashlib, base64 class Ular: def __init__(self): self.ular_flag = \u0026#39;Gda+wKa52rT/1WaWzVXDVi23VemIwUNTpttG4JJddYGHDF4eSGj2/9tCZs8OTwzaizI75GTfxS/QGDKEVm9XBz2zM/WQGrM7gqDNfx3SCpVKtaENNnnYOZHwk8Lpo1wt\u0026#39; def unpad(self, s): return s[:-ord(s[-1])] def decrypt(self, s): cip = base64.b64decode(s) key = hashlib.md5(cip[:16]).hexdigest() IV = cip[-16:] cipher = cip[16:-16] aes_obj = AES.new(key, AES.MODE_CBC, IV) return self.unpad(aes_obj.decrypt(cipher)) def get_flag(self): return self.decrypt(self.ular_flag) def main(): print \u0026#39;----- Sarang Ular -----\u0026#39; inp_flag = raw_input(\u0026#39;Flag : \u0026#39;) real_flag = Ular().get_flag() if inp_flag == real_flag: print \u0026#39;[+] Correct\u0026#39; else: print \u0026#39;[x] Wrong\u0026#39; if __name__ == \u0026#39;__main__\u0026#39;: main() # okay decompiling ular_terbungkus.pyc dari script diatas penulis hanya membenarkan penulisan script dengan menghapous bagian if dan input lalu menampilkan fungsi real_flag\ndef main(): print \u0026#39;----- Sarang Ular -----\u0026#39; real_flag = Ular().get_flag() print(real_flag) Flag : HackFest{88df7b7657844da585f1590c887bbaefdb2685c6}\n","date":"27","image":"images/post/hf-ccug.png","permalink":"https://fallcrescent.my.id/blog/wu-hf0x02/","tags":["CTF"],"title":"Write up HackFest 0x02"},{"categories":["CTF"],"contents":"Web Hacking 1. MR Robot Deskripsi Soal : Catch My Robot\nDiberikan tampilan awal sebagai berikut\nDari soal kita sudah bisa mengetahui kalau pada website ini mempunyai file robots.txt sehingga kita bisa membukanya hanya dengan menambahkan /robots.txt pada akhir URL, maka di dapat tampilan berikut\nsesuai dengan petunjuk yang diberikan maka kita hanya menambahkan /this_is_the_flag.txt pada akhir URL dan didapatkan flag\nFlag: HackFest{RobotsTXT_is_NOT_Secure_Anymore!}\n2. Header Information Untuk mendapatkan flag ini hanya membuka header yang di berikan oleh server, kita dapat melihatnya dengan bantuan browser serta menekan CTRL+SHIFT+I dan klik network atau dapat menggunakan tool Burpsuite\nFlag: HackFest{Informasi_Header_Pada_Web}\\\n3. Google Flag Deskripsi Soal: Hanya google bot yang dapat mengakses flag.\nkita dapat mengubah user agent yang akan kita kirimkan ke server dengan menggunakan extension user agent switcher atau dengan menggunakan burpsuite.\nJika kita menggunakan extension user agent switcher, maka pilih google bot, dan di dapatkan flag\nFlag: HackFest{Haloo_Google!}\n4. Belanja Akhir tahun Tampilan awal dari halaman sebagai berikut, dan hanya memiliki uang Rp10 saja. Untuk itu kita dapat memanipulasi dari source secara langsung, Terlihat sebuah inputan hidden yang dapat diduga sebagai value pengiriman uang ke server\nKita dapat menggantikan lebih dari kebutuhan yang diperlukan, misalkan dengan angka 90000, dan kirim kembali data tersebut.\nMaka di dapatkan flag\nFlag: HackFest{Belanja_Berhasil_Dengan_Manipulasi_Inspeksi_Elemen}\nDigital Forensics Security Wargame Diberikan file berupa gambar, nah karena ini adalah soal digital Forensics maka kita di wajibkan unttuk mencari informasi dari sebuah gambar tersebut. Pada Linux Parrot terdapat command-command yang dapat digunakan untuk mencari informasi pada sebuah file gambar diantaranya adalah: binwalk, foremost dan exiftool (install). Dengan mencoba binwalk akan terlihat ada yang mencurigakan yaitu terdapat file zip yang disembunyikan pada sebuah gambar.\\\nfallcrescent@ccug Downloads]$ binwalk ctf_security_wargame.jpg DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 JPEG image data, EXIF standard 12 0xC TIFF image data, little-endian offset of first image directory: 8 270337 0x42001 Zip archive data, encrypted at least v2.0 to extract, compressed size: 126, uncompressed size: 148, name: flag.txt 270607 0x4210F End of Zip archive, footer length: 22 Gunakan Foremost untuk mengeluarkan zip yang ada pada gambar tersebut, ketika ingin mengextrack file zip diperlukan password.. pertanyaanya adalah apa dan dimana passwordnya berada? Gunakan exiftool untuk melihat detail informasi pada gambar\n[fallcrescent@ccug Security wargame]$ exiftool ctf_security_wargam1e.jpg ExifTool Version Number : 12.25 File Name : ctf_security_wargam1e.jpg File Size : 271 KiB File Modification Date/Time : 2018:01:18 09:37:28+07:00 File Access Date/Time : 2018:10:18 13:47:39+07:00 File Inode Change Date/Time : 2019:11:07 10:14:25+07:00 Image Description : Capture The Flag : Security Wargame Orientation : Horizontal (normal) Software : Google Artist : HackFest XP Title : Capture The Flag : Security Wargame XP Comment : ZIP Password : ZAKZyJvzFKjv2qEm XP Author : HackFest XP Keywords : HackFest Prelim XP Subject : Forensic : File Carving Extract file ZIP menggunakan Password yang di dapat dari exiftool kemudian di dapatkan Flagnya Flag : HackFest{file_carving_adalah_salah_satu_topik_dalam_digital_forensic}\nBroken ZIP Diberikan sebuah file zip yang berisi file flag. Terlihat bahwa file tersebut sehat – sehat saja namun sebenarnya filenya sakit (rusak) karena tidak dapat dibuka ataupun di extract. Untuk mengetahui dimana rusaknya biasanya terdapat pada bagian header filenya. Buka dengan hexeditor atau editor hex lainnya untuk melihat dimana kerusakannya.\nTerlihat bahwa didalam zip tersebut terdapat file flag.png. Pada hex yang terseleksi(berwarna hijau) seharusnya berisi panjang dari nama file yang ada pada zip tersebut (flag.png → len = 8). Maka pada bit tersebut harus di ubah menjadi hex panjang file yang sebenarnya yaitu 08. Kemudian extract zipnya dan dapatkan flag.png nya.\\\nBelum selesai sampai disitu ternyata flagnya berupa QR Code. Buka Web ini untuk mendecode online QR Code, atau bisa menggunakan QRCode Reader yang ada pada handphone anda.\\\nFlag : HackFest{congratulations_you_have_repaired_this_broken_ZIP}\n","date":"11","image":"images/post/hf-ccug.png","permalink":"https://fallcrescent.my.id/blog/writeup-hf-2017/","tags":["CTF"],"title":"Writeup HackFest 2017"}]